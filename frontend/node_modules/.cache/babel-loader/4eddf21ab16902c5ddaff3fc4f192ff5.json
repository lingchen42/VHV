{"ast":null,"code":"import _classCallCheck from \"/Users/ying/Dropbox/VHV/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ying/Dropbox/VHV/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ying/Dropbox/VHV/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ying/Dropbox/VHV/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ying/Dropbox/VHV/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ying/Dropbox/VHV/frontend/src/input.js\";\nimport React from 'react';\n\nvar Input =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Input).call(this, props));\n    _this.state = {\n      active: props.locked && props.active || false,\n      error: props.error || \"\",\n      label: props.label || \"Label\"\n    };\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var inputText = this.props.inputText.inputText;\n      var _this$state = this.state,\n          active = _this$state.active,\n          error = _this$state.error,\n          label = _this$state.label;\n      var _this$props = this.props,\n          predicted = _this$props.predicted,\n          locked = _this$props.locked;\n      var fieldClassName = \"field \".concat((locked ? active : active || inputText) && \"active\", \" \").concat(locked && !active && \"locked\");\n      return React.createElement(\"div\", {\n        className: fieldClassName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, active && inputText && predicted && predicted.includes(inputText) && React.createElement(\"p\", {\n        className: \"predicted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, predicted), React.createElement(\"input\", {\n        id: 1,\n        type: \"text\",\n        inputText: inputText,\n        placeholder: label,\n        onChange: this.props.onChangeValue,\n        onKeyPress: this.props.onKeyPress,\n        onFocus: function onFocus() {\n          return !locked && _this2.setState({\n            active: true\n          });\n        },\n        onBlur: function onBlur() {\n          return !locked && _this2.setState({\n            active: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: 1,\n        className: error && \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, error || label));\n    }\n  }]);\n\n  return Input;\n}(React.Component);\n\nexport default Input;","map":{"version":3,"sources":["/Users/ying/Dropbox/VHV/frontend/src/input.js"],"names":["React","Input","props","state","active","locked","error","label","inputText","predicted","fieldClassName","includes","onChangeValue","onKeyPress","setState","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAGF,KAAK,CAACG,MAAN,IAAgBH,KAAK,CAACE,MAAvB,IAAkC,KAD/B;AAEXE,MAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,IAAe,EAFX;AAGXC,MAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,IAAe;AAHX,KAAb;AAHiB;AAQlB;;;;6BAEQ;AAAA;;AAAA,UACCC,SADD,GACe,KAAKN,KAAL,CAAWM,SAD1B,CACCA,SADD;AAAA,wBAE0B,KAAKL,KAF/B;AAAA,UAECC,MAFD,eAECA,MAFD;AAAA,UAESE,KAFT,eAESA,KAFT;AAAA,UAEgBC,KAFhB,eAEgBA,KAFhB;AAAA,wBAGuB,KAAKL,KAH5B;AAAA,UAGCO,SAHD,eAGCA,SAHD;AAAA,UAGYJ,MAHZ,eAGYA,MAHZ;AAIP,UAAMK,cAAc,mBAAY,CAACL,MAAM,GAAGD,MAAH,GAAYA,MAAM,IAAII,SAA7B,KAC9B,QADkB,cACNH,MAAM,IAAI,CAACD,MAAX,IAAqB,QADf,CAApB;AAGA,aACE;AAAK,QAAA,SAAS,EAAEM,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,MAAM,IACLI,SADD,IAECC,SAFD,IAGCA,SAAS,CAACE,QAAV,CAAmBH,SAAnB,CAHD,IAGkC;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BC,SAA1B,CAJrC,EAKE;AACE,QAAA,EAAE,EAAE,CADN;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EAAED,SAHb;AAIE,QAAA,WAAW,EAAED,KAJf;AAKE,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWU,aALvB;AAME,QAAA,UAAU,EAAE,KAAKV,KAAL,CAAWW,UANzB;AAOE,QAAA,OAAO,EAAE;AAAA,iBAAM,CAACR,MAAD,IAAW,MAAI,CAACS,QAAL,CAAc;AAAEV,YAAAA,MAAM,EAAE;AAAV,WAAd,CAAjB;AAAA,SAPX;AAQE,QAAA,MAAM,EAAE;AAAA,iBAAM,CAACC,MAAD,IAAW,MAAI,CAACS,QAAL,CAAc;AAAEV,YAAAA,MAAM,EAAE;AAAV,WAAd,CAAjB;AAAA,SARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAeE;AAAO,QAAA,OAAO,EAAE,CAAhB;AAAmB,QAAA,SAAS,EAAEE,KAAK,IAAI,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,KAAK,IAAIC,KADZ,CAfF,CADF;AAqBD;;;;EAvCeP,KAAK,CAACe,S;;AA0CxB,eAAed,KAAf","sourcesContent":["import React from 'react';\n\nclass Input extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        active: (props.locked && props.active) || false,\n        error: props.error || \"\",\n        label: props.label || \"Label\"\n      };\n    }\n  \n    render() {\n      const { inputText } = this.props.inputText;\n      const { active, error, label } = this.state;\n      const { predicted, locked } = this.props;\n      const fieldClassName = `field ${(locked ? active : active || inputText) &&\n        \"active\"} ${locked && !active && \"locked\"}`;\n  \n      return (\n        <div className={fieldClassName}>\n          {active &&\n            inputText &&\n            predicted &&\n            predicted.includes(inputText) && <p className=\"predicted\">{predicted}</p>}\n          <input\n            id={1}\n            type=\"text\"\n            inputText={inputText}\n            placeholder={label}\n            onChange={this.props.onChangeValue}\n            onKeyPress={this.props.onKeyPress}\n            onFocus={() => !locked && this.setState({ active: true })}\n            onBlur={() => !locked && this.setState({ active: false })}\n          />\n          <label htmlFor={1} className={error && \"error\"}>\n            {error || label}\n          </label>\n        </div>\n      );\n    }\n  } \n\n  export default Input;"]},"metadata":{},"sourceType":"module"}